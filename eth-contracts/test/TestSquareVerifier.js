// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier')


contract("TestVerifier", accounts => {
  
  const owner = accounts[0] 
  
  //coppied from a the file in zokrates/proof/correctProof.json
  const correctProof = {
      "proof": {

          "a": ["0x060df26361e08f41e64f1f54bc336c956980f9df77aa297d721e73f6585c705e", "0x2d13bf57e99a952485d07f4342819f69db81e7ddafb0d9382d9abde6bff66d76"],

          "b": [["0x1e558dfc61575a8720e6a3bbf6f790ff4a52c97ea4458066f7b5f04d0728eedf", "0x104d716b33627f2dc905e70c159f384cb14e5a32aabf0c39874f55a29af9b1de"], ["0x1c607b1030ef26dec5b39fc69d0d90959091d91699d5382d4c2088ef69dde656", "0x2e02b5cc31647b1fade49bded5d18ffe86eed9e0e9981750eac8bb8d34142430"]],

          "c": ["0x0bb6a73db2e20bb62d12dbc65219a61c65daf1b1e510397856b13dba1687b68f", "0x2b5bb107bab2424d7e3426ecb402dea7f305650bf9e1616e670f2635e7eb7008"]

      },

      "inputs": ["0x0000000000000000000000000000000000000000000000000000000000000004", "0x0000000000000000000000000000000000000000000000000000000000000001"]

  }

  //copied from a the file in zokrates/proof/incorrectProof.json
  const incorrectProof = {
      "proof": {
          "a": ["0x10403b2a6ee758d8cc5a23ee95a932be0120293703d4d98a68786edcfc235eee", "0x305d19b99b22d356942b6360ccfb9ad341fd954c7a41bf4fb87075d8cf4057cc"],
          "b": [["0x0ba0a0146e73b254edc523cedfebd584ec69d76450714fdba233daab0895fb8e", "0x1b4ed25ebc18d558fa8bd3ac5dcc6ff5a5a99cf99a789d14add292ffa91aaefa"], ["0x1572061dee5c87ef90160084dea0ecbf285490b49160e159b2669ff24189498b", "0x1a0cd884bc2f73602e2d370446084bac173ac0648b596b1dfc32142d2b8ea9c4"]],
          "c": ["0x22704f34d4a6306a2c1c6fba6d71cd96b09e6f6156112244126d60a5cec515c8", "0x2708e0a59e64be5214a1971b39b0cc357a9fba1c9973fe669235c33a20b1cdc4"]
      },
      "inputs": ["0x0000000000000000000000000000000000000000000000000000000000000003", "0x0000000000000000000000000000000000000000000000000000000000000000"]
    }


  
  describe('testing verifier', function(){
    beforeEach(async function () {
      this.contract = await Verifier.new({from: owner})
      // Test verification with correct proof
      // - use the contents from proof.json generated from zokrates steps
    })
    it('test correct proof', async function () {
      console.log(correctProof)
      let result = await this.contract.verifyTx.call(correctProof.proof.a,
        correctProof.proof.b, correctProof.proof.c, correctProof.inputs)

      assert.equal(result, true, "Error: the test should Equal True")
    })


    // Test verification with incorrect proof
    it('test incorrect proof', async function () {
      let result = await this.contract.verifyTx.call(incorrectProof.proof.a,
        incorrectProof.proof.b, incorrectProof.proof.c, incorrectProof.inputs)

      assert.equal(result, false, "Error: the test should Equal false")
    })

  })
})
